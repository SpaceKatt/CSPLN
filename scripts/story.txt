<todolist>

Current project status:
    Running! (confirmed for windows only)
    Licensed

Current activity:
    Populate single web_app with images,
        use interactive python environment w/web2py.
        populate_web_app(which_app, which_images)
        Will be used later to automatically populate all web_apps,
            which_app and which_images should be determined from a
            separate function.
    Create repository for this project,
        GitHub or BitBucket.
        IMPORTANT! Back-up is crucial and hasn't yet been established.

To-Do:
    Web_apps must properly display image number,
        index.html in the 'views\\default' directory should be looked at.
    Readme, include 'story.txt' file.
        '<todolist></todolist>' style tags will help identify chunks.
    Send Joe current file structure (without images or other deployments),
        on 28/Aug/2015 && 30/Aug/2015.
    Python script to generate N2-charts from other python scripts,
        more details in notebook.
        (optional, not relevant to current CSPLN Project activity)
    Python script to decide how many parts the web_app should be broken
        up into. Memos in '..\\data' should be handy for this.
    Python script to convert 'MKE_PT_*.bat' -> '*.exe'
    Python script to insert widget.py into scaffolding,
        needed for Mac/Linux web2py packages.

Done:
    CSPLN\scaffolding directory should have a subdirectory,
        for common files that need to be unique.
    Python script to deploy_scaffolding. (create_web_apps_win)
    Python script to process_images.
    Python script to insert_db_schema into the scaffolding app,
        with versioning in mind.
    Delete welcome&&admin apps from scaffolding.
    Python script to automatically create README.txt file.
        Discover scripts in current directory.
        Gather docstrings.
        List all functions under 'Scope:' header.
        List all functions and their associated docstrings, in alphabetical
            order, under 'Details:' header.
    Image Metadata stored as dictionaries instead of lists.
        {'md5':file_size}
    Python script that goes through views&&controllers to change references
        to old db names. page -> image, comment -> note.
        Create dictionaries for this mapping.
            Run dictionary with more specific replacements first.
            (e.g., comment.page_id -> note.image_id, before comment -> note)
    Code License
        (GPL 3, is reccomended)

Keep doing (for consistency):
    Have scaffolding version be a function input, this will make for
        easier transitions between versions.
    Have number_of_apps be a function input, this will make for
        easier transitions between versions.


</todolist>
<story>

27/Aug/2015:
    Created story.txt file.
    Created documentation structure.
    Automated readme creation.
    Realized the documentation process should have already started.
    Fixed Image Metadata storage from lists to dictionaries.
    Need to change references to databases in controllers&&views.
        CSPLN web_apps don't actually work at the moment.

28\Aug\2015
    Sent files to Joe (CSPLN_Skeleton.zip)
    Spent time reading and planning next move.

29\Aug\2015
    Fixed application!
        Changed references to old databases in controllers&&views.
            see: replace_db_references.py

</story>
